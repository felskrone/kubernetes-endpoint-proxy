{{ $endpoint := getenv "KUBERNETES_ENDPOINT" }}

global
    maxconn 4096
    log /dev/log    local0
    log /dev/log    local1 notice
    user haproxy
    group haproxy

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
    option  redispatch
    retries 3
    maxconn 2000
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

{{ range $spec := getvs "/registry/services/endpoints/*/*" }}
{{ $data := json $spec }}
{{ if eq $data.apiVersion "v1" }}
{{ if eq $data.metadata.name  $endpoint }}
frontend http-in
    bind *:80
    default_backend {{ $data.metadata.name }}

backend {{ $data.metadata.name }}{{ if getenv "HAPROXY_HEALTH_CHECK_PATH" }}
    option httpchk GET {{ getenv "HAPROXY_HEALTH_CHECK_PATH" }}
    {{ end }}
    balance leastconn
    option httpclose
    option forwardfor

    {{ range $subset := $data.subsets }}
    {{ range $ref := $subset.addresses }}
    {{ range $portConfig := $subset.ports }}
    server {{ $ref.targetRef.name }} {{ $ref.ip }}:{{ $portConfig.port }} {{ if getenv "HAPROXY_HEALTH_CHECK_PATH" }} check inter 30000 {{ end }}
    {{ end }}
    {{ end }}
    {{ end }}
{{ end }}
{{ end }}

{{ if eq $data.apiVersion "v1beta1" "v1beta2" "v1beta3" }}
{{ if eq $data.id $endpoint }}
frontend http-in
    bind *:80
    default_backend {{ $data.id }}

backend {{ $data.id }}{{ if getenv "HAPROXY_HEALTH_CHECK_PATH" }}
    option httpchk GET {{ getenv "HAPROXY_HEALTH_CHECK_PATH" }}
    {{ end }}
    balance leastconn
    option httpclose
    option forwardfor

    {{ range $ref := $data.targetRefs }}
    server {{ $ref.targetRef.uid }} {{ $ref.endpoint }} {{ if getenv "HAPROXY_HEALTH_CHECK_PATH" }} check inter 30000 {{ end }}
	{{ end }}
{{ end }}
{{ end }}
{{ end }}
